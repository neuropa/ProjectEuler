package net.projecteuler.problems;

import java.util.List;

import net.projecteuler.utils.FibonacciSeries;

/**
 * @author Bence
 * 
 * Problem 2: Even Fibonacci numbers
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class Problem_002
{
	public static void main(final String[] args)
	{
		final Long startedAt = System.currentTimeMillis();
		final long result = solution_1(4000000);
		final Long finishedAt = System.currentTimeMillis();

		System.out.println(result + " [" + (finishedAt - startedAt) + " ms]");
	}

	static long solution_1(final int limit)
	{
		final FibonacciSeries fibonacciSeries = new FibonacciSeries();
		final int batchSize = 35;
		long sum = 0;

		while (true)
		{
			final List<Long> elements = fibonacciSeries.getNext(batchSize);
			// System.out.println("Next " + batch + " elements: " + elements);
			for (final long element : elements)
			{
				if (element <= limit && element % 2 == 0)
				{
					sum += element;
				}

				if (element >= limit)
				{
					return sum;
				}
			}
		}
	}
}